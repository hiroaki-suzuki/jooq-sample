/**
 * This class is generated by jOOQ
 */
package test.generated.tables;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(value    = { "http://www.jooq.org", "3.3.0" },
                            comments = "This class is generated by jOOQ")
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Book extends org.jooq.impl.TableImpl<test.generated.tables.records.BookRecord> {

	private static final long serialVersionUID = -734310189;

	/**
	 * The singleton instance of <code>jooq-test.book</code>
	 */
	public static final test.generated.tables.Book BOOK = new test.generated.tables.Book();

	/**
	 * The class holding records for this type
	 */
	@Override
	public java.lang.Class<test.generated.tables.records.BookRecord> getRecordType() {
		return test.generated.tables.records.BookRecord.class;
	}

	/**
	 * The column <code>jooq-test.book.id</code>.
	 */
	public final org.jooq.TableField<test.generated.tables.records.BookRecord, java.lang.Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>jooq-test.book.author_id</code>.
	 */
	public final org.jooq.TableField<test.generated.tables.records.BookRecord, java.lang.Integer> AUTHOR_ID = createField("author_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>jooq-test.book.title</code>.
	 */
	public final org.jooq.TableField<test.generated.tables.records.BookRecord, java.lang.String> TITLE = createField("title", org.jooq.impl.SQLDataType.VARCHAR.length(400).nullable(false), this, "");

	/**
	 * The column <code>jooq-test.book.published_in</code>.
	 */
	public final org.jooq.TableField<test.generated.tables.records.BookRecord, java.lang.Integer> PUBLISHED_IN = createField("published_in", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>jooq-test.book.language_id</code>.
	 */
	public final org.jooq.TableField<test.generated.tables.records.BookRecord, java.lang.Integer> LANGUAGE_ID = createField("language_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * Create a <code>jooq-test.book</code> table reference
	 */
	public Book() {
		this("book", null);
	}

	/**
	 * Create an aliased <code>jooq-test.book</code> table reference
	 */
	public Book(java.lang.String alias) {
		this(alias, test.generated.tables.Book.BOOK);
	}

	private Book(java.lang.String alias, org.jooq.Table<test.generated.tables.records.BookRecord> aliased) {
		this(alias, aliased, null);
	}

	private Book(java.lang.String alias, org.jooq.Table<test.generated.tables.records.BookRecord> aliased, org.jooq.Field<?>[] parameters) {
		super(alias, test.generated.Jooq_test.JOOQ_TEST, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.UniqueKey<test.generated.tables.records.BookRecord> getPrimaryKey() {
		return test.generated.Keys.KEY_BOOK_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.util.List<org.jooq.UniqueKey<test.generated.tables.records.BookRecord>> getKeys() {
		return java.util.Arrays.<org.jooq.UniqueKey<test.generated.tables.records.BookRecord>>asList(test.generated.Keys.KEY_BOOK_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.util.List<org.jooq.ForeignKey<test.generated.tables.records.BookRecord, ?>> getReferences() {
		return java.util.Arrays.<org.jooq.ForeignKey<test.generated.tables.records.BookRecord, ?>>asList(test.generated.Keys.FK_BOOK_AUTHOR, test.generated.Keys.FK_BOOK_LANGUAGE);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public test.generated.tables.Book as(java.lang.String alias) {
		return new test.generated.tables.Book(alias, this);
	}

	/**
	 * Rename this table
	 */
	public test.generated.tables.Book rename(java.lang.String name) {
		return new test.generated.tables.Book(name, null);
	}
}
